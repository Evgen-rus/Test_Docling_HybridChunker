from docling.chunking import HybridChunker
from docling.document_converter import DocumentConverter
from dotenv import load_dotenv
from openai import OpenAI
import json
from datetime import datetime

load_dotenv()

# Initialize OpenAI client
client = OpenAI()

print("üöÄ –ù–∞—á–∏–Ω–∞—é –ø—Ä–æ—Ü–µ—Å—Å —Ä–∞–∑–±–∏–µ–Ω–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–∞ –Ω–∞ —Ñ—Ä–∞–≥–º–µ–Ω—Ç—ã...")

# --------------------------------------------------------------
# –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞
# --------------------------------------------------------------

converter = DocumentConverter()
print("üìÑ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é –¥–æ–∫—É–º–µ–Ω—Ç...")
result = converter.convert("documents/–õ–û–ì–ò–ö–ê_–ü–†–û–î–ê–ñ–ò_–¢–ï–°–¢–û–í–û–ì–û_–ü–ï–†–ò–û–î–ê_–õ–ò–î–ì–ï–ù–ë–Æ–†–û.md")

# --------------------------------------------------------------
# –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –≥–∏–±—Ä–∏–¥–Ω–æ–≥–æ —Ä–∞–∑–±–∏–µ–Ω–∏—è (–ù–û–í–´–ô API)
# --------------------------------------------------------------

print("üîß –ù–∞—Å—Ç—Ä–∞–∏–≤–∞—é HybridChunker...")
# –ù–æ–≤—ã–π API HybridChunker
chunker = HybridChunker(
    chunk_size=8000,  # –í–º–µ—Å—Ç–æ max_tokens
    overlap=100       # –ü–µ—Ä–µ–∫—Ä—ã—Ç–∏–µ –º–µ–∂–¥—É —Ñ—Ä–∞–≥–º–µ–Ω—Ç–∞–º–∏
)

print("‚úÇÔ∏è –†–∞–∑–±–∏–≤–∞—é –¥–æ–∫—É–º–µ–Ω—Ç –Ω–∞ —Å–º—ã—Å–ª–æ–≤—ã–µ —Ñ—Ä–∞–≥–º–µ–Ω—Ç—ã...")
chunk_iter = chunker.chunk(dl_doc=result.document)
chunks = list(chunk_iter)

print(f"‚úÖ –†–∞–∑–±–∏–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
print(f"üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
print(f"   ‚Ä¢ –í—Å–µ–≥–æ —Ñ—Ä–∞–≥–º–µ–Ω—Ç–æ–≤: {len(chunks)}")
print(f"   ‚Ä¢ –†–∞–∑–º–µ—Ä —Ñ—Ä–∞–≥–º–µ–Ω—Ç–∞: –¥–æ 1024 —Ç–æ–∫–µ–Ω–æ–≤")

# --------------------------------------------------------------
# –ê–Ω–∞–ª–∏–∑ —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö —Ñ—Ä–∞–≥–º–µ–Ω—Ç–æ–≤
# --------------------------------------------------------------

print("\n" + "="*60)
print("–ê–ù–ê–õ–ò–ó –°–û–ó–î–ê–ù–ù–´–• –§–†–ê–ì–ú–ï–ù–¢–û–í:")
print("="*60)

for i, chunk in enumerate(chunks[:3]):  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 3 —Ñ—Ä–∞–≥–º–µ–Ω—Ç–∞
    print(f"\nüìã –§—Ä–∞–≥–º–µ–Ω—Ç {i+1}:")
    print(f"   ‚Ä¢ –†–∞–∑–º–µ—Ä: {len(chunk.text)} —Å–∏–º–≤–æ–ª–æ–≤")
    print(f"   ‚Ä¢ –ó–∞–≥–æ–ª–æ–≤–∫–∏: {chunk.meta.headings if chunk.meta.headings else '–ù–µ—Ç'}")
    print(f"   ‚Ä¢ –ü—Ä–µ–≤—å—é: {chunk.text[:200]}...")

if len(chunks) > 3:
    print(f"\n... –∏ –µ—â–µ {len(chunks) - 3} —Ñ—Ä–∞–≥–º–µ–Ω—Ç–æ–≤")

print(f"\nüíæ –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ñ—Ä–∞–≥–º–µ–Ω—Ç–æ–≤ –≥–æ—Ç–æ–≤–æ –¥–ª—è —ç–º–±–µ–¥–¥–∏–Ω–≥–∞: {len(chunks)}")

# --------------------------------------------------------------
# –§—É–Ω–∫—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —á–∞–Ω–∫–æ–≤ –≤ Markdown
# --------------------------------------------------------------

def save_chunks_to_markdown(chunks, filename="chunks_output.md"):
    """
    –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –≤—Å–µ —á–∞–Ω–∫–∏ –≤ –∫—Ä–∞—Å–∏–≤—ã–π Markdown —Ñ–∞–π–ª
    
    Args:
        chunks: —Å–ø–∏—Å–æ–∫ —á–∞–Ω–∫–æ–≤ –æ—Ç HybridChunker
        filename: –∏–º—è –≤—ã—Ö–æ–¥–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
    """
    with open(filename, "w", encoding="utf-8") as f:
        # –ó–∞–≥–æ–ª–æ–≤–æ–∫ –¥–æ–∫—É–º–µ–Ω—Ç–∞
        f.write("# –ê–Ω–∞–ª–∏–∑ —Ñ—Ä–∞–≥–º–µ–Ω—Ç–æ–≤ –¥–æ–∫—É–º–µ–Ω—Ç–∞\n\n")
        f.write(f"**–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è:** {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}\n\n")
        f.write(f"**–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ñ—Ä–∞–≥–º–µ–Ω—Ç–æ–≤:** {len(chunks)}\n\n")
        f.write("---\n\n")
        
        # –°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ
        f.write("## –°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ\n\n")
        for i, chunk in enumerate(chunks, 1):
            headings = chunk.meta.headings if chunk.meta.headings else ["–ë–µ–∑ –∑–∞–≥–æ–ª–æ–≤–∫–∞"]
            main_heading = headings[0] if headings else f"–§—Ä–∞–≥–º–µ–Ω—Ç {i}"
            f.write(f"- [–§—Ä–∞–≥–º–µ–Ω—Ç {i}: {main_heading}](#—Ñ—Ä–∞–≥–º–µ–Ω—Ç-{i})\n")
        f.write("\n---\n\n")
        
        # –î–µ—Ç–∞–ª—å–Ω—ã–µ —Ñ—Ä–∞–≥–º–µ–Ω—Ç—ã
        for i, chunk in enumerate(chunks, 1):
            f.write(f"## –§—Ä–∞–≥–º–µ–Ω—Ç {i}\n\n")
            
            # –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ
            f.write("### üìä –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ\n\n")
            f.write(f"- **–†–∞–∑–º–µ—Ä —Ç–µ–∫—Å—Ç–∞:** {len(chunk.text)} —Å–∏–º–≤–æ–ª–æ–≤\n")
            
            # –ó–∞–≥–æ–ª–æ–≤–∫–∏
            if chunk.meta.headings:
                f.write(f"- **–ó–∞–≥–æ–ª–æ–≤–∫–∏:** {' ‚Üí '.join(chunk.meta.headings)}\n")
            else:
                f.write("- **–ó–∞–≥–æ–ª–æ–≤–∫–∏:** –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç\n")
            
            # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –µ—Å–ª–∏ –µ—Å—Ç—å
            if hasattr(chunk.meta, 'page') and chunk.meta.page:
                f.write(f"- **–°—Ç—Ä–∞–Ω–∏—Ü–∞:** {chunk.meta.page}\n")
            
            f.write("\n")
            
            # –°–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ—Ä–∞–≥–º–µ–Ω—Ç–∞
            f.write("### üìù –°–æ–¥–µ—Ä–∂–∏–º–æ–µ\n\n")
            f.write("```text\n")
            f.write(chunk.text)
            f.write("\n```\n\n")
            
            # –†–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å –º–µ–∂–¥—É —Ñ—Ä–∞–≥–º–µ–Ω—Ç–∞–º–∏
            if i < len(chunks):
                f.write("---\n\n")
    
    print(f"üìÅ –í—Å–µ —Ñ—Ä–∞–≥–º–µ–Ω—Ç—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ —Ñ–∞–π–ª: {filename}")

# --------------------------------------------------------------
# –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —á–∞–Ω–∫–æ–≤ –≤ —Ñ–∞–π–ª
# --------------------------------------------------------------

print("\n" + "="*60)
print("–°–û–•–†–ê–ù–ï–ù–ò–ï –§–†–ê–ì–ú–ï–ù–¢–û–í:")
print("="*60)

save_chunks_to_markdown(chunks, "chunks_analysis.md")
print("‚úÖ –ì–æ—Ç–æ–≤–æ! –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –æ—Ç–∫—Ä—ã—Ç—å —Ñ–∞–π–ª 'chunks_analysis.md' –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤—Å–µ—Ö —Ñ—Ä–∞–≥–º–µ–Ω—Ç–æ–≤.")